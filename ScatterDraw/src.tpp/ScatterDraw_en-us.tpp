topic "1 ScatterDraw";
[0 $$1,0#96390100711032703541132217272105:end]
[i448;a25;kKO9;2 $$2,0#37138531426314131252341829483380:class]
[l288;2 $$3,0#27521748481378242620020725143825:desc]
[b42;2 $$4,4#13035079074754324216151401829390:normal]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[H6;0 $$6,0#05600065144404261032431302351956:begin]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[ $$0,0#00000000000000000000000000000000:Default]
[{_}%EN-US 
[ {{10000@3 [s0; [*@(229)4 ScatterDraw]]}}&]
[s1; &]
[s2;:ScatterDraw`:`:class:%- [@(0.0.255)3 class][3 _][*3 ScatterDraw]&]
[s0; &]
[ {{4916:5084f0;g0;^ [s0; [2 
@@image:1845&1099
()
]]
::= [s0;> [*R1 
@@image:1906&1076
()
]]}}&]
[s0; &]
[s0; [2 Versatile 2D scatter graph control. It does not require GUI 
so it works in command line programs.]&]
[s0;2 &]
[s0; [2 In case of GUI it can be used ][^topic`:`/`/ScatterCtrl`/src`/ScatterCtrl`$en`-us`#ScatterCtrl`:`:class^2 S
catterCtrl][2  that is based on ScatterDraw.]&]
[s1; &]
[s0; [2 ScatterDraw data is included in ][^topic`:`/`/ScatterDraw`/src`/DataSource`$en`-us^2 D
ataSource][2 .]&]
[s0;2 &]
[s0; [2 In ][^topic`:`/`/ScatterDraw`/srcdoc`/Overview`$en`-us^2 ScatterCtrl`_demo][2  
there is an overview of control possibilities.]&]
[s0;2 &]
[s0; [2 Special characteristics are explained apart:]&]
[s0;i150;O0; [^topic`:`/`/ScatterDraw`/srcdoc`/Overview`_en`-us^2 Overview]&]
[s0;i150;O0; [^topic`:`/`/ScatterDraw`/srcdoc`/LegendTable`_en`-us^2 LegendTable]&]
[s0;i150;O0; [^topic`:`/`/ScatterDraw`/srcdoc`/Units`_en`-us^2 Units]&]
[s0;i150;O0; [^topic`:`/`/ScatterDraw`/srcdoc`/Responsiveness`_en`-us^2 Responsiveness]&]
[s0;i150;O0; [^topic`:`/`/ScatterDraw`/srcdoc`/2DSurfaces`_en`-us^2 2D 
surfaces]&]
[s0; &]
[s1;%- &]
[ {{10000F(128)G(128)@1 [s0; [*2 Constructor Detail]]}}&]
[s6;%- &]
[s5;:ScatterDraw`:`:ScatterDraw`(`):%- [* ScatterDraw]()&]
[s3; Initializes the class.&]
[s1;%- &]
[s0;%- &]
[ {{10000F(128)G(128)@1 [s0; [*2 Public Member List]]}}&]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatX:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&], 
[@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatX]&]
[s3; If set this callback will give the String to be painted in the 
pop window and table data to refer X axis data.&]
[s3; The input values are the X axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatXGridUnits:%- [_^Upp`:`:Callback3^ Callback3]<String[@(0.0.255) `&
], [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatXGridUnits]&]
[s3; If set this callback will give the String to be painted beside 
every X axis grid line.&]
[s3; The input values are the X axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatDeltaX:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&],
 [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatDeltaX]&]
[s3; If set this callback will give the String to be painted in the 
pop window representing the delta between two X axis points.&]
[s3; The input values are the X axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatY:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&], 
[@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatY]&]
[s3; If set this callback will give the String to be painted in the 
pop window and table data to refer Y axis data.&]
[s3; The input values are the Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatYGridUnits:%- [_^Upp`:`:Callback3^ Callback3]<String[@(0.0.255) `&
], [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatYGridUnits]&]
[s3; If set this callback will give the String to be painted beside 
every Y axis grid line.&]
[s3; The input values are the Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatDeltaY:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&],
 [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatDeltaY]&]
[s3; If set this callback will give the String to be painted in the 
pop window representing the delta between two Y axis points. 
The input values are the Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatY2:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&], 
[@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatY2]&]
[s3; If set this callback will give the String to be painted in the 
pop window and table data to refer secondary Y axis data.&]
[s3; The input values are the Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatY2GridUnits:%- [_^Upp`:`:Callback3^ Callback3]<String[@(0.0.255) `&
], [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatY2GridUnits]&]
[s3; If set this callback will give the String to be painted beside 
every secondary Y axis grid line.&]
[s3; The input values are the secondary Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:cbModifFormatDeltaY2:%- [_^Callback3^ Callback3]<String[@(0.0.255) `&
], [@(0.0.255) int], [@(0.0.255) double]>_[* cbModifFormatDeltaY2]&]
[s3; If set this callback will give the String to be painted in the 
pop window representing the secondary delta between two Y axis 
points. The input values are the Y axis value index and value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridLinesX:%- [_^Upp`:`:Callback1^ Callback1]<[_^Upp`:`:Vector^ Ve
ctor]<[@(0.0.255) double]>`&>_[* SetGridLinesX]&]
[s3; If set this callback will return the locations to set the X 
axis grid lines, and these values will be used instead of the 
set by SetMinUnits.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridLinesY:%- [_^Upp`:`:Callback1^ Callback1]<[_^Upp`:`:Vector^ Ve
ctor]<[@(0.0.255) double]>`&>_[* SetGridLinesY]&]
[s3; If set this callback will return the locations to set the Y 
axis grid lines, and these values will be used instead of the 
set by SetMinUnits.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenZoomScroll:%- [_^Callback^ Callback]_[* WhenZoomScroll]&]
[s3; Callback called when the user does a zoom or a scroll.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenSetRange:%- [_^Callback^ Callback]_[* WhenSetRange]&]
[s3; Callback called when some of the control ranges is changed.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenSetXYMin:%- [_^Callback^ Callback]_[* WhenSetXYMin]&]
[s3; Callback called when scatter plot origin is changed.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenPainter:%- [_^Upp`:`:Callback1^ Callback1]<Painter[@(0.0.255) `&]>
_[* WhenPainter]&]
[s3; Callback called before control Paint with Painter to draw additional 
graphics.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenDraw:%- [_^Upp`:`:Callback1^ Callback1]<Draw[@(0.0.255) `&]>_[* Whe
nDraw]&]
[s3; Callback called before control Paint with Draw to draw additional 
graphics&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:WhenZoomToFit:%- [_^Upp`:`:Callback^ Callback]_[* WhenZoomToFit]&]
[s3; Callback called after ZoomToFit() function.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:WhenRemoveSeries:%- [_^Upp`:`:Function^ Function]_<[@(0.0.255) b
ool]([@(0.0.255) int])>_[* WhenRemoveSeries]&]
[s3; Callback called just before a data series is removed. The argument 
is the data series to remove. If returns false, the series is 
not removed.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:WhenSwapSeries:%- [_^Upp`:`:Function^ Function]_<[@(0.0.255) b
ool]([@(0.0.255) int], [@(0.0.255) int])>_[* WhenSwapSeries]&]
[s3; Callback called just before two data series are swapped. The 
arguments are the data series to be swapped. If returns false, 
the series are not swapped.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetSize`(const Upp`:`:Size`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetSize]([_^Size^ Size]_[*@3 sz])&]
[s3; Sets the control size with [%-*@3 sz]. Functions like GetImage() 
will return a bitmap of [%-*@3 sz] size.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetSize`(`)const:%- [@(0.0.255) virtual] [_^Size^ Size]_[* GetSize]()_[@(0.0.255) c
onst]&]
[s3; Returns the control size. Functions like GetImage() will return 
a bitmap of [%-*@3 sz] size.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:Responsive`(bool`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* Responsive]([@(0.0.255) bool]_[*@3 responsive]_`=_[@(0.0.255) true], 
[@(0.0.255) double]_[*@3 factor]_`=_[@3 1])&]
[s3; If [%-*@3 responsive] is true, ScatterDraw size will not affect 
significatively to control look.&]
[s3; Normal [%-*@3 factor] is 1. If higher, fonts, margins and lines 
scale will be higher with control scale..&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:IsResponsive`(`):%- [@(0.0.255) bool]_[* IsResponsive]()&]
[s3; Returns true if responsiveness is set.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetResponsivenessFactor`(`):%- [@(0.0.255) double]_[* GetResponsivene
ssFactor]()&]
[s3; Returns responsiveness factor.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotScaleX`(`):%- [@(0.0.255) double]_[* GetPlotScaleX]()&]
[s3; Returns responsiveness scale in X axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotScaleY`(`):%- [@(0.0.255) double]_[* GetPlotScaleY]()&]
[s3; Returns responsiveness scale in Y axis&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotScaleAvg`(`):%- [@(0.0.255) double]_[* GetPlotScaleAvg]()&]
[s3; Returns average responsiveness scale&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&]_[*@3 color])&]
[s3; Sets [%-*@3 color] .as graph background color.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetTitle`(const Upp`:`:String`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetTitle]([@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 title])&]
[s3; Sets [%-*@3 title] as graph title.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetTitle`(`):%- [@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[* G
etTitle]()&]
[s3; Returns graph title.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetTitleFont`(const Upp`:`:Font`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetTitleFont]([@(0.0.255) const]_[_^Font^ Font][@(0.0.255) `&]_[*@3 fontTitle])&]
[s3; Sets [%-*@3 fontTitle] as title font.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetTitleColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ ScatterDra
w][@(0.0.255) `&]_[* SetTitleColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&]_[*@3 c
olorTitle])&]
[s3; Sets [%-*@3 colorTitle] as title text color.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetTitleColor`(`):%- [_^Upp`:`:Color^ Upp`::Color][@(0.0.255) `&]_[* Get
TitleColor]()&]
[s3; Returns the title color.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetTitleFont`(`):%- [_^Font^ Font][@(0.0.255) `&]_[* GetTitleFont]()&]
[s3; Returns the title font.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabels`(const Upp`:`:String`&`,const Upp`:`:String`&`,const Upp`:`:String`&`):%- [@(0.0.255) v
oid]_[* SetLabels]([@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 xLabel], 
[@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 yLabel], [@(0.0.255) const]_[_^String^ S
tring][@(0.0.255) `&]_[*@3 yLabel2]_`=_`"`")&]
[s3; Sets the labels of the horizontal axis ([%-*@3 xLabel]), vertical 
axis ([%-*@3 yLabel]) and secondary vertical axis ([%-*@3 yLabel2]).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabelX`(const Upp`:`:String`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLabelX]([@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 xLabel])&]
[s3; Sets [%-*@3 xLabel] as the label of the horizontal axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLabelX`(`):%- [@(0.0.255) const]_[_^String^ String]_`&[* GetLabelX](
)&]
[s3; Returns the label of the horizontal axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabelY`(const Upp`:`:String`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLabelY]([@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 yLabel])&]
[s3; Sets [%-*@3 yLabel] as the label of the vertical axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLabelY`(`):%- [@(0.0.255) const]_[_^String^ String]_`&[* GetLabelY](
)&]
[s3; Returns the label of the vertical axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabelY2`(const Upp`:`:String`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLabelY2]([@(0.0.255) const]_[_^String^ String][@(0.0.255) `&]_[*@3 yLabel])&]
[s3; Sets [%-*@3 yLabel] as the label of the secondary vertical axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLabelY2`(`):%- [@(0.0.255) const]_[_^String^ String]_`&[* GetLabelY2
]()&]
[s3; Returns the label of the secondary vertical axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabelsFont`(const Upp`:`:Font`&`):%- [_^ScatterDraw^ ScatterDraw
][@(0.0.255) `&]_[* SetLabelsFont]([@(0.0.255) const]_[_^Font^ Font][@(0.0.255) `&]_[*@3 font
Labels])&]
[s3; Sets [%-*@3 fontLabels] as the labels font.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLabelsFont`(`):%- [_^Font^ Font]_[* GetLabelsFont]()&]
[s3; Returns labels font.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLabelsColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ ScatterDr
aw][@(0.0.255) `&]_[* SetLabelsColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&]_[*@3 c
olorLabels])&]
[s3; Sets [%-*@3 colorLabels] as the color of the labels.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLabelsColor`(`):%- [_^Upp`:`:Color^ Upp`::Color]_[* GetLabelsColor](
)&]
[s3; Returns labels color.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaMargin`(int`,int`,int`,int`):%- [_^ScatterDraw^ ScatterD
raw][@(0.0.255) `&]_[* SetPlotAreaMargin]([@(0.0.255) int]_[*@3 hLeft], 
[@(0.0.255) int]_[*@3 hRight], [@(0.0.255) int]_[*@3 vTop], [@(0.0.255) int]_[*@3 vBottom])&]
[s3; Sets the left([%-*@3 hLeft]), right ([%-*@3 hRight]), top([%-*@3 vTop]) 
and bottom ([%-*@3 vBottom]) margins of the scatter plots inside 
ScatterDraw control.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaLeftMargin`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetPlotAreaLeftMargin]([@(0.0.255) int]_[*@3 margin])&]
[s3; Sets the left [%-*@3 margin] of scatter plot inside ScatterDraw 
control.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotAreaLeftMargin`(`):%- [@(0.0.255) int]_[* GetPlotAreaLeftMargi
n]()&]
[s3; Returns the plot area left margin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaRightMargin`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetPlotAreaRightMargin]([@(0.0.255) int]_[*@3 margin])&]
[s3; Sets the right [%-*@3 margin] of scatter plot inside ScatterDraw 
control.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotAreaRightMargin`(`):%- [@(0.0.255) int]_[* GetPlotAreaRightMar
gin]()&]
[s3; Returns the plot area right margin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaTopMargin`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetPlotAreaTopMargin]([@(0.0.255) int]_[*@3 margin])&]
[s3; Sets the top [%-*@3 margin] of scatter plot inside ScatterDraw 
control.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotAreaTopMargin`(`):%- [@(0.0.255) int]_[* GetPlotAreaTopMargin](
)&]
[s3; Returns the plot area top margin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaBottomMargin`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetPlotAreaBottomMargin]([@(0.0.255) int]_[*@3 margin])&]
[s3; Sets the bottom [%-*@3 margin] of scatter plot inside ScatterDraw 
control.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotAreaBottomMargin`(`):%- [@(0.0.255) int]_[* GetPlotAreaBottomM
argin]()&]
[s3; Returns the plot area bottom margin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetPlotAreaColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ Scatter
Draw][@(0.0.255) `&]_[* SetPlotAreaColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&
]_[*@3 p`_a`_color])&]
[s3; Sets [%-*@3 p`_a`_color] as the plot area background color.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetPlotAreaColor`(`):%- [_^Color^ Color][@(0.0.255) `&]_[* GetPlotAreaC
olor]()&]
[s3; Returns the plot area background color.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetAxisColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ ScatterDraw
][@(0.0.255) `&]_[* SetAxisColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&]_[*@3 axi
s`_color])&]
[s3; Sets [%-*@3 axis`_color] as the color of the axis.&]
[s0; -|
@@image:756&406
(A3kAQQAAAAAAAAAAAHic7ZlBboMwEEW75Q5d9hDcgkNwHI6B2OcwXKNrLyqU2pmSjiFBxOAZO/5vRVCQopevF0u5XgEAAAAAAAAAAAAAAPnxAQ5TVdUe1T9BNE0T9mCyfH9+hT04TZO1vUe1CaLv+7AH08R6Dn7W2o6q+m2wko94NvFVv8eqD0omYqu2rT7+IXU5xbPBqjc5Hg0OWv2MEyUTWPVDTvds0OoV50aDg1VzIkkm0Oo7UT0brPpGvGhw0GoByUThqxbzbAputUw0OGWuWlgyUWCrVTybwlYtHw1OOa1WlEwUsmp1z6bIVmuRyKovrftDub3se2fdjWGfRpU0Wm391W1b73KdLUms2pnuxrHzXLuX83zZtVv1/C53+48Mhp5Cq8m0L9cxv/bu/6tefDXJo79qJnLpmsJcezd91Tm5Vm+1p3flmn4vuU8ekHtBMsiH/qpZbh9k95aWjsv1VW/cSw/lVq+ObrwKs0GvFI+05lFt3VVvTXR51FidQOgsTqQvOoFWl4N2qwsihXN1IWDVYqDVYmDVYqDVYmDVYqDVYmDVYqDVYmDVYqDVYmDVYqDVYryk2k7UqqOh4vrV62EY0GoZ0Gox0GoxsGox9qv+BRdBfHA=)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetAxisWidth`(double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_
[* SetAxisWidth]([@(0.0.255) int]_[*@3 axis`_width])&]
[s3; Sets [%-*@3 axis`_width] as the width of the axis in pixels.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ ScatterDraw
][@(0.0.255) `&]_[* SetGridColor]([@(0.0.255) const]_[_^Color^ Color][@(0.0.255) `&]_[*@3 gri
d`_color])&]
[s3; Sets [%-*@3 grid`_color] as the color of the grid.&]
[s0; -|
@@image:737&400
(A3YAQAAAAAAAAAAAAHic7ZfBbYNAEEV9pYccU4S7oAjKoQzEnWLcRs5ziJCzsDIsK4gXi1mGmf8OFo7XVvT09YyfTwAAAAAAAADg4gZ2UhTFLsO/CZRlmXLMAn3fO8m7DFMCTdOkHLOAk8xhGEwwGcaGJ5gMuw5z/+dXARvmBh3mBhvmBh3mBhveTVfd7vUj+bjFDj/qe/CTturWTzmR6yZlGJa74UFcaNU933K8/QkCDEvt8OB3Q+gorq6mXS+OzrMfzwgwLHTD/wj24w5eDc4Ofl9Sx2MCDAslsrYocWx/fj4cXXZFgOHLbHj+y7bh6BUZhi/T4RTD2PAefBzWarttOLxx8+8XYFg0y/vh8Ctsw3D4lqpz1wIMi91wfox1+ASwYW4sdvgdP1/fB34aNhxxrF5ChwOc28P1Ejb8gsOtBx0mTr1kfsNMZQix3GFutx6zG86jl6x2OJtesrfhDOGNMNXhzG49djZ8il6y0eH8ZQhRv+ET3Xp0d/h0vaR6wxL0ktIOnxveCH0bluPWo6zD0vSSog2LKkOIjg7LdOtRsGHJekldhwXygWFnz0/UPeL67XXbtgo6LBkFHRYOOswNNsyNjvthyWDD3KDD3GDD3Hxg+A8r2Lwx)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetGridColor`(`):%- [_^Upp`:`:Color^ Color]_`&[* GetGridColor]()&]
[s3; Returns grid color.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridWidth`(double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_
[* SetGridWidth]([@(0.0.255) double]_[*@3 grid`_width])&]
[s3; Sets [%-*@3 grid`_width] as the width of the grid.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetGridWidth`(`):%- [@(0.0.255) double]_[* GetGridWidth]()&]
[s3; Returns the grid width.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridDash`(const char`*`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetGridDash]([@(0.0.255) const]_[@(0.0.255) char]_`*[*@3 dash])&]
[s3; Sets [%-*@3 dash] as the grid dash style.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetGridDash`(`):%- [@(0.0.255) const]_[@(0.0.255) char]_`*[* GetGridDas
h]()&]
[s3; Gets grid dash style.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetGridWidth`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* S
etGridWidth]([@(0.0.255) int]_[*@3 grid`_width])&]
[s3; Sets [%-*@3 grid`_width] as the width of the grid in pixels.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:ShowVGrid`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* Sho
wVGrid]([@(0.0.255) bool]_[*@3 show])&]
[s3; If [%-*@3 show] is true the vertical grid is shown&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:ShowHGrid`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* Sho
wHGrid]([@(0.0.255) bool]_[*@3 show])&]
[s3; If [%-*@3 show] is true the horizontal grid is shown&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:ShowLegend`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* Sh
owLegend]([@(0.0.255) bool]_[*@3 show]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 show] is true graphs name, color and style will be shown.&]
[s3; [^topic`:`/`/ScatterDraw`/srcdoc`/LegendTable`$en`-us^ Here ]there 
are described legend details.&]
[s0; -|
@@image:1375&500
(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)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetShowLegend`(`):%- [@(0.0.255) bool]_[* GetShowLegend]()&]
[s3; Returns true if legend is shown.&]
[s3; [^topic`:`/`/ScatterDraw`/srcdoc`/LegendTable`$en`-us^ Here ]there 
are described legend details.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendPos`(const Upp`:`:Point`&`):%- [_^ScatterDraw^ ScatterDraw
][@(0.0.255) `&]_[* SetLegendPos]([@(0.0.255) const]_[_^Point^ Point]_`&[*@3 pos])&]
[s3; Sets the coordinates ([%-*@3 pos]) of the legend table corner 
relative to the plot corner.&]
[s3; [^topic`:`/`/ScatterDraw`/srcdoc`/LegendTable`$en`-us^ Here ]there 
are described legend details.&]
[s0; -|
@@image:1331&693
(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)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendPosX`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* S
etLegendPosX]([@(0.0.255) int]_[*@3 x])&]
[s3; Sets the [%-*@3 x] coordinate.of the legend table corner relative 
to the plot corner.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendPosY`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* S
etLegendPosY]([@(0.0.255) int]_[*@3 y])&]
[s3; Sets the [%-*@3 y] coordinate.of the legend table corner relative 
to the plot corner.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendPos`(`):%- [_^Point^ Point][@(0.0.255) `&]_[* GetLegendPos]()&]
[s3; Returns the pos of the legend corner relative to the plot corner.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendFont`(const Upp`:`:Font`&`):%- [_^ScatterDraw^ ScatterDraw
][@(0.0.255) `&]_[* SetLegendFont]([@(0.0.255) const]_[_^Upp`:`:Font^ Font]_`&[*@3 fnt])&]
[s3; Sets [%-*@3 fnt] as the legend font.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendFont`(`):%- [_^Upp`:`:Font^ Font]_`&[* GetLegendFont]()&]
[s3; Gets legend font.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendNumCols`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLegendNumCols]([@(0.0.255) int]_[*@3 num])&]
[s3; Sets the number [%-*@3 num] of legend columns.&]
[s3;i150;O0; 3 columns&]
[s3; -|-|
@@image:1875&468
(AywBSwAAAAAAAAAAAHic7Zw7lqM6EEC9Li+IdbwleA+zB+KOO3fkxJN23mdCHuIjl5HEz5Qk4N7jwMYyiEJXKkGrqwoAAAAAAAAAAAAAAAAAAABicAGAiLgO/tszfxpS1+JoEFU9jucgwL7AQYC0HM9BsiYNiKoeOAhzIKp6HM9BgH2BgwBpOZ6DZE0aEFU9cBDmQFT1OJ6DAPsCBwHScjwHyZo0IKp64CDMgajqcTwHAfYFDgKk5XgOkjVpQFT1wEGYA1HV43gOAuwLHARIy1IHI/+fDYC9ENNBtzzAycFBgLTgIEBacBDy5/L3yC0nQwcvdcQvf7c+0d3w3+USeqWuWhqa5nDkc8/KwdY++dr4bMv6EN2rnCz8qK6X6vZYc4jFvxLEcLAs+kAU04Uft+pyrZadURO7uYGewDaHT3fkoehrWcyo5u1aXW8r9z8W6BM52LSLsn9/+7htuNQXqY51kbmDxqni9V4hDlV565w1ss/QPIxsDptUTVBfLqvebaFcs3i8eq5iRPPkDtqByRWwf1UrXh7K5d35KlY62Fd9zMFNAlF7sbQ7X8/ioA9PYIO2YF6+Q33YWS6iDnqmDo6G+9O4u9RBH7Y+J2kyHVbRfXxdJKeYGfICScyaSyvqvbGDnkD40mUzOMqkqXGnaMZ16dGw2FTOWZdf4vuEgB846NPQDNJOBzG4sKbDKsxJ1h9l5zUoNozLMAwiBfOcdUbj4JZBD9HGzorz8qXs4is9td8Oi5VjGVbu46Chd6eLg7Csbmim9tJT+61TbKx3r6aaXiAM481hbYsI1fD2Jo60rGhOVXpqv3WLFeE+aKSH6k85tYPvlVG+J9Py6Po12YvbKyEN6t67xZotoQ4+9/mgpW0gpezFbdcuc8j+vVus3RI627E50DShtGj1DsO08/hKjG5WHKmbfe8WM1tGc+6s54O+Kqk/m+huS/j66ZCDbgDbBrhNLiqI+myivS0h79J0hBz0Df9tkyydjR8IWIUd1NCwv8JupUMOes6t7aoD+dHYJDxDB7UoX2rYu8zuDNHjoHci2eCd7uTuoL1p+Xr64s4QfQ6OPHepAyq3R73tsxp7L9Q+fXFniF4HvRPJZkfVNTAajjWKEznofVoj88xQLuoWCzxnfMtRotyDXUX5lk+2yDwzlIu6xfzPGQe5+waPCHV41V5UUV7DUC7qFvM+ZxzGNMSpHATIEBwESAsOAqQFBwHSgoMAacFBgLTgIEBacBAgLedyUH3tqj1Kvk/oDT/3r477z2Th3+f31/fzd8n+zU96Fv70hJzIwQhrV5tdN0t+MnbQCNKr9/t8Tkv42SFgivQOrlyMsnzNTpw/YjSLetYMoF86eI5UD4LaYxMOLiGxg0oC+jWMsHb1YVZ8Ll88riRgQEOTiQ4tfGWPrTtG1Pv9u/kopB0WG3529kYmOs2JxkGD8trVbvua/5oRS8CWTpJeHGHZz715Jz213zrF6g2jw11zGAbECdI7GB+ttat25Uqs/1zzIdYQeQulM1MmrP17t1izZXSoi5D47p4zOlgprV0t38fiHWjYzds807eQg55BrVUzMNrh4DQncjDC2lXPTvLj59lLYZ86uDNEn4PeiWS/I+/24A9AcCIH1deuygNl7KB4OvgavWSeGcpF3WL+54yiEALO4EwOAuQIDgKkBQcB0oKDAGmJ7CAAuERzMH/+NKSuxdEgqnocz0GAfYGDAGk5noNkTRoQVT1wEOZAVPU4noMA+wIHAdJyPAfJmjQgqnrgIMyBqOrhdfB/ydS0IQ==)
&]
[s3;i150;O0; 2 columns&]
[s3; -|-|
@@image:1318&543
(A9MAVwAAAAAAAAAAAHic7ZsxdqMwEIY5lw/EOfYI3GHvQJ06vSs3Tus+b0sWCRBjzUgyGGmU8H+Pl4exMCB/zAh5MgwAAAAAAAAAAAAAYAMNAPnh4v0Dlr8W7bP4nUA8oALEAypAvAhItfmAeBEgXj4gHlAB4gEVIF4EpNp8QLwIEC8fEA+oAPGAChAvAlJtPiBeBIiXD4gHVIB4QAWIFwGpNh8QLwLEywfEAypAPKDCJvEK1+SD+ikmHm8MTgvEAypAPKACxAMq1CZe03yNy9FX+WP40zShRfvUDqYe8Sbl6HLwpfbjIealTza+DZdm6G57DrF5L0IJ8fp26Yg23fjWDc1l2HZFtu9SHX0W8Wxn9Mt6lzZvM93FfJNt5eIZkdp1PUM/DH03i2oMD7qtK54LQdy6ZRl2LFJvbL9xd7FTvOXUY+Id0hGjDJfu7at8kVinK4r33ElHiid2+aiE3+UsJ4xt2nZ+uSrEmpngZl+2LGLsEY+c98HiCR0hjQZMGKTJ1wrT2ghO5fGbpVLq2D4seTURT3TvMOsmJmGcLask/dxDVE73rt+sjw2Oao94hkWYuR+IWmM8NGdP5XTvsmbjX37jeUfBGM9h+8N0GLlf3U1MtZnXeTO7JXQr1z7Gc0zhq6dxzAVxmiKXdd5s2hK62lbKB4R6xFvOJ/t0yjy+lu7IkHi8B6dePybVEopOp4wJYPbHi+Ah8aRAP2WRnm2MWjfUJ14u+tWHsVd4Yp0QxBMHhxZxCFO7eO6Rc50w4qM+SbzIVNHYoXT7a88vZxHPKvE0NB6e02go1fJmgflA98RhliJP0Lvon7OqhabRUKrlzeT5QG9oEhzmnUc8UBUQD6gA8YAKEA+oAPGAChAPqFCheM0XFP391Cbe9HPZ0VcJqqNO8fK417KZ0wju940dn/9KhaUe2QtB3VFiO1YlHq0R2H6pcejPh12OirTb2supH8gVKVAIaj/aVlXVK55fx3NMVZQo7Zs/om4iUTAksP9aN5ZFlSkENXVTiVCpWQgat+4N8ST3xNDvVXSab6Wdy6boN+Q18wsiPRKFaNJ3kHFh/WA25i0EvZleTNV8VxTxjitADlzr3HGLLVSt1vYRldO9y5u14Ypb4Wt4iWIRz55n3kLQeXvV4q2nEah8j+yyl+mfcgavnMR+DdQxt86bdYnhS81jPEeuQtDRaiaqROXi5XBvSYW8WjEknmDRFDUCj4VF/6NmP1kKQfvnqFvjP/uUxT3JugkCPuoTxQvOC7h7m1HyQWYjBQpBhQ8ROI146+wVuT9pGg2lWt5MnA/0iylrJXchKD0QxAPVAfGAChAPqADxgAoQD6gA8YAKEA+oAPGACicS73H9mLk+ko2/758fn/fvLZ9vdlnYuOsJOYt4xorFt+/7PW3ee4cAKXTF+8iDcJ1juMsdhSDeFhTFy2RdwD2TaH311uQ4CWPsvF4/7Utiqt/Mf80+DYk2zVkinmE2Y7GFqPW42jUqp3uXNRs3RAObPQxCX4KzjPEcTgv6LDDrSPPxss6b2S3RoFYgr/94TieeG4sJQ7KQeEL4mnwMxDWIl+Ys4j3uiwluooSP+iTxxMHh8kHi9uAOgHAW8cgs3hqnaBoNpVreTJ4PJI1g3QucRjxQFxAPqADxgAoQD6hQUjwAKGXEA+AoIB5QAeJF+GvRPovfCcSLAPHyAfGAChAPqCCK9x9N1vpo)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendNumCols`(`):%- [@(0.0.255) int]_[* GetLegendNumCols]()&]
[s3; Returns the number of legend columns.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendRowSpacing`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLegendRowSpacing]([@(0.0.255) int]_[*@3 num])&]
[s3; Sets the height ([%-*@3 num]) between legend rows.&]
[s3;i150;O0; num `= 0&]
[s3; -|-|
@@image:775&612
(A3wAYgAAAAAAAAAAAHic7ZsxlpswEIZ9Lg7EOXIE3yF3oN56e1dunNb9vpQECSQGzYwINhrNruZ7vDzMyhh/kn8koYyjYRiGYRiGYdBcjJKQzn97/hoF4JzXvq6fjDmXx7JFHnMuj2WLPOZcHssWecy5PJYt8phzeSxb5DHn8li2yGPO5bFskcecy2PZIo85l+dotgg/N9SMpHOyfGuUcH60fGsodH65/Jm2U7+lLlRly2wbbid/22H6iGUbdgvfx+4yXu+vfET+XQ059w6HsH/dl36Yazde+rGv4fxQ+djwsPCwjS9sBFML7MajzfYFlDvfijrTOXlpk43uuj3kGz9Mm6lM3y8vV3uomGvS/mWPfi9VnB/Klj3tpwkfgasoavUzLNUB6yX+NS02uAzh0O98ezGF76EzvtE67aD1us1rhMaWfVzMH0l/MuP2XTzV85y6pOJ9xft1VZdkA+cc33LdSdRky5vOSzGsKqaEwUkyQzgnbwSeSTs+/r2ypTT9NkYcMDe4bMHFmH5+vLG6je8jNeVcCQ1lixr0OP91uXBbma9eDT3ZIuF86FGg87h+ydGBKxo7UTTkfOkghv0C8y3jcF3qyFUuW631syXc6XPOTxmITh64Ycz55CZ3KjsHlk52TlwbNc06D2zWtPGu+i70CIO3tNhehpAd95LOj2WLWDuHroZYC92aBq46YL3Ev6Ji0794/Jl8iuU5ZG60A2y9cYoQZkLYx8XmI9xos6dmBAD18zwg2lecRoyLuuROxzmnbojzsHNAB7PCx6acx07F+tQNJzzlPPO8bTIMj//fbVpPtpRn2MaIB+YGly24GN3PT+Z82UhvybkW9GTL5qr+/OTaUeh8fkZ06rfUhcJsiY/mTv2iMz0K9AzxycYL589N6GhzDh+HHvu6+8Bu3LXELMB9He3n+ujVsyUdQJ7z2J+8sN2HZieSG6nWdb4j/A3nlHbXw0MTT8lCFdfD7pd1AbC3nRRL518S8oP/6tmy4/xV7czXXVwFUdBq76sD1kv8Ky7W83Nb2a65DufrlTDLuDJveZV5XeGYPDT2oqDeuI+LuSPZ5xmq83y9Em7pXAHt4bePJ0c454TAedjJ9E9yswB6nJcn9lXiUzec8KRz8kbgTzR2TGvP3a/1ZEt51lkSkLcwN7hswcXIfn46d8PRknMttJQtWjDn8rSVLcXXt8RPyb2xIecC61v8qf2yAWnnx8q/Nb7nN4zM+ha3MGDnB6JnfUt57QLrW+5utmbvf4vVzxaxdg5dFVrfshxX71yeUutb4qi0gvOj5StQZH3LsP2taV2vKInA+hbiJAQtZUvp9S3wg8y5LhrKFjWYc3naypbn7WPh9twt/PX4/Ph8fB05v3tLgH9rQ86dkKD66/HYl/7eR/BUz5aPMhCXNTXyg832MN/BeSHhjHaXLKn1NQ1mV65ibrdP/xJUUlosfY3Olqvd6tkiJXwjJYgCVp83vwfrJf4VFZsOZJuz/xi2RHXnFYhG4C1vqQkYQGEfF/NHskGVC7LqeV6FJXeJ+OWcE412rgqmNZtzz/MRJMReIE54yjl5IwgnIo+zb/C0lC1r73xtnTA3uGzBxeh+PiiUzZ2WnGtBOFuMGTHnxvtwzrlsMd7HnMtj2SKPOZfHskUecy6PZYs8nPN/wk6lGw==)
&]
[s3;i150;O0; num `= 5&]
[s3; -|-|
@@image:731&737
(A3UAdgAAAAAAAAAAAHic7ZxNkqsgFEazrizIdbwlZA/Zg+Me9zyjTPKmPe96Q56g4g1wMT9+SJHvlNVlDGpxgKteSRtDCCGEEPIoB7Ipgd5/ZDuoFwr1QqFeKNQLhXqhUC8U6oVCvVCoFwr1QqFeKNQLhXqhUC8U6oVCvVCoFwr1QsnoLfxOqmZAeg1x73apFwf1QqFeKPvqPRz+DgugWrWwl95RrFw2rlg/nGJa+tXCV3M8mNP1lVPk92pTr9PVz+undb9PczqaQ2e6mvT67hS7nRfzwpJg6FdH82xnfIF69N472VJv0vBQ8ePpfpPr0jJcDGW6bvq4iIqK2Y7qPnbRKKhH7wOGN3NrhBbvZFHRT+ZlE/hvw2K9DQIaVem9Py/40jbiuqI1LPqkXZwxKWdaj4u5LeFAMPd76TR/Y3Y9LZaCwa3pja+E9iDVB4dy9EuthxARh4KRhN5k0HYMhuPtH6rXVVzGAYsc+FpwiIsp98/+emcX/S6lVb2VQL1QqBcK9UKhXijUC4V6oeyi98/hoC3Iuu5As3r7Lnqu0LEPvc9mMKPMWoo29U6JhnkdkE43/WlqDtuOagsW1Ts/Rub0bpKRHKqsJbm2J5e7L6dXCNlYb8Jw6jXYmPZawoXT0h3nzMKsKCy2FgSSuZ7yek3B3iu19F74cRnO1rxsAv9tVGz4Gycig7N8Wuz1jF2xl33Sv9eRg3pej4uNW7S0Y5fKAgsa12tc6nCyFFyANL2p69SYf+yjjVm3plW9/rK+zGCIo3FKb2buwiBTbn/s6tnoU1t/HwcccuBrwSEulr5/Dt7JqeG3Ub21QL1QqBcK9UKhXijUC2V3vYe/LTfEvnrH+WWAatVCDXoxhrvouSKDnyr1wvFz+fod9coJks/VbB2ZDjghMr/XJcObS+uU1BtmEreZ3ptsmtW5dRuSS1kW07vi9g29KcM2UxC9QgimmdukTDfN/5UJmqBYmF4PyCd8d+u92839V2o2aZmdSIGdMy+bwH8bF+v0txTZbE5xvctJlZ9WZHZ5lfEXPCaYMeqcSJN+PS5mt2TfItcSe5eTar9cARieB2+c+9b0JlyN+UflDiGX+d39sQKDv1vwMxjiaJzUmwza7kDmqPTh3GW0Ub1LElzERjnwteAQF0veP4epeY1G9dYC9UKhXijUC4V6oVAvFOqFQr1QmtULn53uz5LbsU29BWanu0O76cHV6H0rp6svMWVmp9sJwCvdvpxekNu04QKz0682Gb/2X3va7L1SC2h2+rS9Jr3lQc1O9+nJz9ZrQLPT+/sRVMEvg0pSYHZ64iAJ2tQLn50uT/SBemuBeqFQLxTqhUK9UKgXCvVC2Vbv+XymXsngwTs5Ox5fr1rvz+Vr4vKzWvj39v31fft95vh2lxl912311hIcbN1nq7+327rf906hUzL2fmFI1Grouk92xqepTC/IrWLYhoZQ8DKcRy22DS6Xb/dRtEdYLPwcHS3XkG32XlH/2YkQ+HNxa7IJ/LdRsWFDtpO606glGr8x85WXV6JJuowg83pczG3JRppcJGpcr4+RiVCp6U10xdG60kc/T+/Pba6vv+WKo3FKbzJozwdKbld3cLSpV9z1Ln1ODnwtOMTF0vfPolA2cDSqtxaoFwr1QqFeKDi9ZAShl7wP9UKhXijUCyXW+x9Wo5TE)
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendRowSpacing`(`):%- [@(0.0.255) int]_[* GetLegendRowSpacing]()
&]
[s3; Returns the height between legend rows.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:LEGEND`_TOP:%- [@(0.0.255) enum]_LEGEND`_POS_[* LEGEND`_TOP]&]
[s3; 
@@image:1800&325
(AyABNAAAAAAAAAAAAHic7ZnNmaQgFACNy4CIY0Mwh82BZDxtFHt0QRRfC7SC4s9s1efBsRnFBwUPHAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeArNn+buKvwcGhPN5s/dtbiNX02TOu6u2j2M3eE/ffdzcWbJ4+QHaPOI6dCbhfuhbYauL3lE9n8JrvBLqzkQartw3w1NO+S90Ri7vYHewHeHozeKoOZaqh3V7Nqh7QrvvyfQ1anr19jmej7vDrd7iGkAE0f1cL+sL2o5rxCHQXeTj1bkQz1LdodTqiYwzeW16jLF2UW/jEpqn8Ln4yeUUK75GAqOCDp/GC6i0K+56t/8OiUQps/nDsPlZAd9/QIn9AV7xB51cCDMwgT9Br++hvJoTENMQNc9K0hk7ECjpj+XBgiK2akqkViUNJuo98l+RQIRS2HtpCYTmdELNc7H0pF1sa080JTPcXlDrgN+xRSzk2sg/6ph7WCk7EuaP+XAtCq2jss6DCJ1uphKAU3h4uKlWFzQU+ykg/7XdTH9Let5+vxlmb2Y4iAMMp3I1l466H8Nim2MyiXdanvEPUeuqYbdhxTSIDW+qnTQ/xoWU+nx5cvoczXV9zcc/TQeydHXR1naMZ2HxcYrqYH56esvj2t8LUdfPyTLvG4+D4u5K6m3PbbmSKUzxTdM49bNg5iVvBRSJX8eFrNXvubBmbHou7aZaV18/aWjeeYF+/PTEj82vqb8Cl/Kda5z8kPBpfvzbokvdzwmUn7Fpm3X3XRw8VhHSC4XKig2t3BY6ZRfkXdzw3Air8lc9FqZPh7hLwS/PAa9dHu/0xquyCJ+RRduI9HlxdP98pt7yxeIcEUW8+vLtwcTUHn90i2UYvyeof8CEa7Ion5FF27jjYY2MYtldoq1ReLv5woW+xohc79UfhgWS3xH+8gbLtmrLEJ/5HgOmful8sOwWPw72iqffsjiI2SpvaiibMNUfhgWi35HW8c0gyU/dNmhVnOa+HkOAOWMno0D2TJn4RfAWTibkvNXAwCCIr/MPDY7lV5/mZv/hbP5PXJ3LX4a9aKaa5ebrPbsH+IXwA6rxNevJROcL6bXXvgFkDV/ZYFfNSA/rMFD8kP8uh38qgF+AbwR/AKoB369C/LDGpAfggO/aoBfAG8EvwDqgV/vgvywBuSH4MCvGuAXwBvBL4B64Ne7ID+sAfkhOPCrBvgF8Eb+AVuRFD0=)
&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:LEGEND`_ANCHOR`_LEFT`_TOP:%- [@(0.0.255) enum]_LEGEND`_POS_[* LEGEND`_
ANCHOR`_LEFT`_TOP]&]
[s3; 
@@image:987&843
(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)
&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:LEGEND`_ANCHOR`_RIGHT`_TOP:%- [@(0.0.255) enum]_LEGEND`_POS_[* LEGEND
`_ANCHOR`_RIGHT`_TOP]&]
[s3; 
@@image:806&775
(A4EAfAAAAAAAAAAAAHic7ZwxkqMwEEU5FwfiDpvtEbjD3oF44skdOfGkk09tyCKBhJC6BdiIbi//FbVlY2GP+8GXkWD7HgAAAAAAAACAMBU4nUjBX4o/FvIl8CIbFYByQIE4CCJxoEAcBJE4UCAOgkgcKBAHQSQOFIiDIBIHCsRBEIkDBeIgiMSBAnEQROJAgTgvBtHJc6yaEVTQA3vNQ2kF2ze/JlAgDoJIHP0KquprWAp8dS1oDqKx+OFy8Jfvho+Ylm618b2vq769P/MR+a2uq8CWtHOP23UHu2nrvmr6RoGCXUHkd8u0/m7pn1gIhv2z7vfu1E/wXgqWdTtSAWlhKE7dLlfZQyOMpqFN00xP52ImzcwOb582ydGkQcH2zTdYOKz+fVA6X7e5XN1kJ9TkX42bdSZwON5OwfJvK9wdj9hd2lgI9m2z2KqGBZwep83smviA6pdb8agKIuYvLP6j9N7OlYyChFOQ9t7mTbQGkdJTs26uzBBHaeyMEArITsQyWEjXa1CwffOTaZaZYwhDhguitBlzfuH7aLPwv76urEAJ1w0iNUCBOAgicaBAHASROFAgjtog+l1V3FKyHgJcWkHXJOdmPGYAYu/odjKiSqE2iIormAaG3OMCUzZ9107KjGvWsjoF7pQ+p+CQ0eqhLNzg5vHk5od0BVFQtIMVEBaoad1xuHOOJlu6pnYjQa6McbO1wCHH73Qq6E88CsLSdV5KPUeHsRNq8q8mzYZ/00Hq6FPQF2QYd+ku3Lf9HGQYIO5x2mxcww1JN9QsQgAUGNraVTLqNDkFVN86jk13ycps/XuFQeQorsD/XJmvEEp7B0pB5tqgoeDh+m09vloF5emWmWMJQ4YLorQZfX4RzTGz3YHaILoOUCDOhYNIC1AgDoJIHCgQ5y2CqPr6n2XpVzBeT1rgq2tBfxD5q3oLfPsmOTfL4C97fOL9c3NCyhWEF1bv+/brhMM3bYmZg/s8Q5AbqtMWRPEo8zG3F5D6Vq+3PZDccLYqBSv1f0EBZcGM7CRTWdHtMmagrZnuPwgH3aJm8RRORH7CQFsQrSh41gLz7afSubqFRW6snVCTfzVt1vCzZdkROpUK5j+MudUss8mzjHdG9tHV6LZuYbX947SZWZO9uuKd+oL5D+Pu9itgwQVFOr/CKSDqOY5NM798cjMHahWUx/8K8lcIpb0DqYDsROwb9TVzLOS6frVBVJ55oiXI6jBkuCBKm5HnF/H0D8eFFWjhwkGkBSgQB0EkDhSIgyASBwrEQRCJc2kFxe+y8Z+S2/C6QXTCXTb2re3tCW+l4KU5AX5JOecuG3MDwsrhoyuICtWftnDCXTZ3M+Gz9r/g6VJQzgJN4btspvXyCrZvLkOpu2z80DUUbKDIXTbd8kiUvONS6Y/SE+6yId6E4LoKit9lE34Qgkg1UCDOhYNIC1AgDoJIHCgQB0EkzrEKfKnDsv+ypOuhYGSoA1m3LY83Kti++dl83z4mbt+rjX8enx+fj5897282cfCbHqvgxYPoVEx9XOV/Ho91B699BI+2vuCjDMQ3Hw6BnTv1bt5QQaH6MxZMDMUS5ugYS2c83W6f9mngLG4WP0/eLSdb24/Ss+q/qJGrW1Dk75t9FGryrybNhhXZnd1+DNtCmwIBfIHC3nMSE6aVe5w2s2uyqZZLPVVBJMWU2UR0cwqIXXo0w+zrUEDx/XA18T83096BUkB2Iu6NyPXsBpYLB9F8VjDvu2HIcEGUNqPPL4JG2ZC6sAItXDeI1AAF4iCIxJFVAEZKK+CCCLwOFIizUQEoBxSIgyASBwrEQRCJkyr4B5LL3ys=)
&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:LEGEND`_ANCHOR`_LEFT`_BOTTOM:%- [@(0.0.255) enum]_LEGEND`_POS_[* LEGE
ND`_ANCHOR`_LEFT`_BOTTOM]&]
[s3; 
@@image:1018&1025
(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)
&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:LEGEND`_ANCHOR`_RIGHT`_BOTTOM:%- [@(0.0.255) enum]_LEGEND`_POS_[* LEG
END`_ANCHOR`_RIGHT`_BOTTOM]&]
[s3; 
@@image:875&950
(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)
&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendAnchor`(LEGEND`_POS`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetLegendAnchor]([@(0.0.255) LEGEND`_POS]_[*@3 anchor])&]
[s3; Sets with [%-*@3 anchor ]the legend table position:&]
[s3;i150;O0; LEGEND`_TOP,&]
[s3;i150;O0; LEGEND`_ANCHOR`_LEFT`_TOP, &]
[s3;i150;O0; LEGEND`_ANCHOR`_RIGHT`_TOP, &]
[s3;i150;O0; LEGEND`_ANCHOR`_LEFT`_BOTTOM, &]
[s3;i150;O0; LEGEND`_ANCHOR`_RIGHT`_BOTTOM&]
[s0; &]
[s0;= 
@@image:2505&1695
()
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendAnchor`(`):%- [@(0.0.255) LEGEND`_POS]_[* GetLegendAnchor]()
&]
[s3; Returns the legend table position.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendFillColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ Scatt
erDraw][@(0.0.255) `&]_[* SetLegendFillColor]([@(0.0.255) const]_[_^Color^ Color]_`&[*@3 co
lor])&]
[s3; Sets with [%-*@3 color] the legend background color.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetLegendBorderColor`(const Upp`:`:Color`&`):%- [_^ScatterDraw^ Sca
tterDraw][@(0.0.255) `&]_[* SetLegendBorderColor]([@(0.0.255) const]_[_^Color^ Color]_`&[*@3 c
olor])&]
[s3; Sets with [%-*@3 color] the legend border color.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendFillColor`(`):%- [_^Color^ Color][@(0.0.255) `&]_[* GetLegendF
illColor]()&]
[s3; Returns the legend background color&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegendBorderColor`(`):%- [_^Color^ Color][@(0.0.255) `&]_[* GetLegen
dBorderColor]()&]
[s3; Returns the legend border color.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMode`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* SetMod
e]([@(0.0.255) int]_[*@3 `_mode]_`=_MD`_ANTIALIASED)&]
[s3; Sets the drawing [%-*@3 mode]. Values are:&]
[s0;l288;i150;O0; [2 Drawn with Draw]&]
[s0;l448;i150;O0;%- [2 MD`_DRAW]&]
[s0;l288;i150;O0;%- [2 Drawn with PAINTER]&]
[s0;l448;i150;O0;%- [2 MD`_ANTIALIASED-|`= MODE`_ANTIALIASED,]&]
[s0;l448;i150;O0;%- [2 MD`_NOAA        -|`= MODE`_NOAA,]&]
[s0;l448;i150;O0;%- [2 MD`_SUBPIXEL-|`= MODE`_SUBPIXEL]&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetMode`(`):%- [@(0.0.255) int]_[* GetMode]()&]
[s3; Returns the drawing mode as documented in SetMode().&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:ZoomToFit`(bool`,bool`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* ZoomToFit]([@(0.0.255) bool]_[*@3 horizontal], [@(0.0.255) bool]_[*@3 vertical]_`=_[@(0.0.255) f
alse], [@(0.0.255) double]_[*@3 factor]_`=_[@3 0])&]
[s3; Rescales the x axis if [%-*@3 horizontal ]is true and y axis if 
[%-*@3 vertical] is true to show all graphs data.on the control. 
[%-*@3 factor] indicates the fit factor (0 fills the control) .&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Zoom`(double`,bool`,bool`):%- [@(0.0.255) void]_[* Zoom]([@(0.0.255) do
uble]_[*@3 scale], [@(0.0.255) bool]_[*@3 hor]_`=_[@(0.0.255) true], 
[@(0.0.255) bool]_[*@3 ver]_`=_[@(0.0.255) true])&]
[s3; Zooms plots by [%-*@3 scale] factor horizontally if [%-*@3 hor] 
is true and vertically if [%-*@3 ver] is true.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Scroll`(double`,double`):%- [@(0.0.255) void]_[* Scroll]([@(0.0.255) do
uble]_[*@3 factorX], [@(0.0.255) double]_[*@3 factorY])&]
[s3; Scrolls plots horizontally by [%-*@3 factorX] and vertically by 
factor [%-*@3 factorY].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:LinkedWith`(ScatterDraw`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* LinkedWith]([_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[*@3 ctrl])&]
[s3; Links zoom and scroll events with [%-*@3 ctrl].&]
[s3; All zoom and scroll in either of both controls will affect the 
other control.&]
[s1; &]
[s3; 
@@image:1708&1310
()
&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Unlinked`(`):%- [@(0.0.255) void]_[* Unlinked]()&]
[s3; Unlinks series.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSurf`(Upp`:`:DataSourceSurf`&`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* AddSurf]([_^Upp`:`:DataSourceSurf^ DataSourceSurf]_`&[*@3 surf])&]
[s3; Adds the 2D surface [%-*@3 surf].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetSurfMinZ`(double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_
[* SetSurfMinZ]([@(0.0.255) double]_[*@3 val])&]
[s3; Sets [%-*@3 val] as the minimum 2D surface Z value.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetSurfMinZ`(`)const:%- [@(0.0.255) double]_[* GetSurfMinZ]()_[@(0.0.255) c
onst]&]
[s3; Returns the minimum 2D surface Z value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetSurfMaxZ`(double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_
[* SetSurfMaxZ]([@(0.0.255) double]_[*@3 val])&]
[s3; Sets [%-*@3 val] as the maximum 2D surface Z value.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetSurfMaxZ`(`)const:%- [@(0.0.255) double]_[* GetSurfMaxZ]()_[@(0.0.255) c
onst]&]
[s3; Returns the maximum 2D surface Z value.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:ZoomToFitZ`(`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* ZoomTo
FitZ]()&]
[s3; Calculates the minimum and maximum 2D surface Z values and sets 
them as minimum and maximum values to be plotted.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:ShowRainbowPalette`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* ShowRainbowPalette]([@(0.0.255) bool]_[*@3 show]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 show] is true 2D surface rainbow color palette will 
be shown.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetShowRainbowPalette`(`):%- [@(0.0.255) bool]_[* GetShowRainbowPalet
te]()&]
[s3; Returns true if 2D surface rainbow color palette is shown.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetRainbowPalettePos`(const Upp`:`:Point`&`):%- [_^ScatterDraw^ Sca
tterDraw][@(0.0.255) `&]_[* SetRainbowPalettePos]([@(0.0.255) const]_[_^Upp`:`:Point^ Poi
nt]_`&[*@3 p])&]
[s3; Sets [%-*@3 p] as the position of 2D surface rainbow color palette.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetRainbowPalettePos`(`):%- [_^Upp`:`:Point^ Point][@(0.0.255) `&]_[* G
etRainbowPalettePos]()&]
[s3; Returns the 2D surface rainbow color palette position.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetRainbowPaletteSize`(const Upp`:`:Size`&`):%- [_^ScatterDraw^ Sca
tterDraw][@(0.0.255) `&]_[* SetRainbowPaletteSize]([@(0.0.255) const]_[_^Upp`:`:Size^ Siz
e]_`&[*@3 sz])&]
[s3; Sets  [%-*@3 sz] as the Size of 2D surface rainbow color palette.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetRainbowPaletteSize`(`):%- [_^Upp`:`:Size^ Size][@(0.0.255) `&]_[* Ge
tRainbowPaletteSize]()&]
[s3; Returns the 2D surface rainbow color palette size.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:SetDefaultCSVSeparator`(Upp`:`:String`):%- [_^Upp`:`:ScatterDraw^ S
catterDraw][@(0.0.255) `&]_[* SetDefaultCSVSeparator]([_^Upp`:`:String^ String]_[*@3 sep])
&]
[s3; Sets [%-*@3 sep] as the default .csv files field separator.&]
[s1; &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:GetDefaultCSVSeparator`(`):%- [_^Upp`:`:String^ String]_[* Get
DefaultCSVSeparator]()&]
[s3; Gets the the default .csv files field separator.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetZoomStyleX`(ZoomStyle`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetZo
omStyleX](ZoomStyle_[*@3 style]_`=_TO`_CENTER)&]
[s3; Sets the X zoom [%-*@3 style]. Valid values are:&]
[s3;i150;O0; TO`_CENTER: Zoom is centered to the control center.&]
[s3;i150;O0; FROM`_BASE: Zoom is centered to the X origin.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetZoomStyleY`(ZoomStyle`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetZo
omStyleY](ZoomStyle_[*@3 style]_`=_TO`_CENTER)&]
[s3; Sets the Y zoom [%-*@3 style]. Valid values are:&]
[s3;i150;O0; TO`_CENTER: Zoom is centered to the control center.&]
[s3;i150;O0; FROM`_BASE: Zoom is centered to the Y origin.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetRange`(double`,double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetRange]([@(0.0.255) double]_[*@3 rx], [@(0.0.255) double]_[*@3 ry][*  
`= Null], [@(0.0.255) double]_[*@3 ry2][*  `= Null])&]
[s3; Sets the horizontal ([%-*@3 rx]), vertical ([%-*@3 ry]) and secondary 
vertical ([%-*@3 ry2]) axis ranges.&]
[s3; Range is the visible with of the plot in series units (not in 
pixels).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetXRange`(`)const:%- [@(0.0.255) double]_[* GetXRange]()[@(0.0.255) co
nst]&]
[s3; Returns the x axis range.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYRange`(`)const:%- [@(0.0.255) double]_[* GetYRange]()[@(0.0.255) co
nst]&]
[s3; Returns the y axis range.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetY2Range`(`)const:%- [@(0.0.255) double]_[* GetY2Range]()[@(0.0.255) c
onst]&]
[s3; Returns the secondary y axis range.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:SetMajorUnits`(double`,double`,double`):%- [_^Upp`:`:ScatterDraw^ S
catterDraw]_`&[* SetMajorUnits]([@(0.0.255) double]_[*@3 ux], [@(0.0.255) double]_[*@3 uy],
 [@(0.0.255) double]_[*@3 uy2])&]
[s3; Sets the horizontal ([%-*@3 ux]), vertical ([%-*@3 uy]) or secondary 
vertical ([%-*@3 uy2]) distance between grid lines.&]
[s1; &]
[s6; &]
[s5;:ScatterDraw`:`:SetMajorUnitsNum`(int`,int`):%- [_^ScatterDraw^ ScatterDraw]_`&[* Set
MajorUnitsNum]([@(0.0.255) int]_[*@3 nx], [@(0.0.255) int]_[*@3 ny])&]
[s3; Sets the horizontal ([%-*@3 nx]) and vertical ([%-*@3 ny]) number 
of grid lines.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetMajorUnitsX`(`):%- [@(0.0.255) double]_[* GetMajorUnitsX]()&]
[s3; Returns the distance between grid lines in X axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetMajorUnitsY`(`):%- [@(0.0.255) double]_[* GetMajorUnitsY]()&]
[s3; Returns the distance between grid lines in Y axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetMajorUnitsY2`(`):%- [@(0.0.255) double]_[* GetMajorUnitsY2]()&]
[s3; Returns the distance between grid lines in secondary Y axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMinUnits`(double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetMinUnits]([@(0.0.255) double]_[*@3 ux], [@(0.0.255) double]_[*@3 uy])&]
[s3; Sets with [%-*@3 ux] and [%-*@3 uy] the first X and Y axis grid 
lines location in real units from the lower left corner. If either 
[%-*@3 ux] or [%-*@3 uy] is not visible, it ensures that values obtained 
adding or substracting SetMajorUnits() values will be visible.&]
[s3; If [^topic`:`/`/ScatterDraw`/src`/ScatterDraw`_en`-us`#ScatterDraw`:`:SetGridLinesX^ S
etGridLinesX ]or [^topic`:`/`/ScatterDraw`/src`/ScatterDraw`_en`-us`#ScatterDraw`:`:SetGridLinesY^ S
etGridLinesY ]callback is set, the values of X or Y axis respectively 
will not be used.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetXMinUnit`(`)const:%- [@(0.0.255) double]_[* GetXMinUnit]_()_[@(0.0.255) c
onst]&]
[s3; Returns the first X axis grid line location.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYMinUnit`(`)const:%- [@(0.0.255) double]_[* GetYMinUnit]_()_[@(0.0.255) c
onst]&]
[s3; Returns the first Y axis grid line location.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYMinUnit2`(`)const:%- [@(0.0.255) double]_[* GetYMinUnit2]_()_[@(0.0.255) c
onst]&]
[s3; Returns the first secondary Y axis grid line location`-&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetXYMin`(double`,double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetXYMin]([@(0.0.255) double]_[*@3 xmin],[@(0.0.255) double]_[*@3 ymin],[@(0.0.255) doub
le]_[*@3 ymin2]_`=_[@3 0])&]
[s3; Sets with [%-*@3 xmin], [%-*@3 ymin] and [%-*@3 ymin2] the X, Y and 
secondary Y axis origin.&]
[s1; &]
[s6; &]
[s5;:ScatterDraw`:`:GetXMin`(`)const:%- [@(0.0.255) double]_[* GetXMin]_()_[@(0.0.255) cons
t]&]
[s3; Returns the X axis origin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYMin`(`)const:%- [@(0.0.255) double]_[* GetYMin]_()_[@(0.0.255) cons
t]&]
[s3; Returns the Y axis origin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYMin2`(`)const:%- [@(0.0.255) double]_[* GetYMin2]_()_[@(0.0.255) co
nst]&]
[s3; Returns the secondary Y axis origin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetY2Min`(`)const:%- [@(0.0.255) double]_[* GetY2Min]_()_[@(0.0.255) co
nst]&]
[s3; Returns the secondary Y axis origin.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetXMax`(`)const:%- [@(0.0.255) double]_[* GetXMax]()_[@(0.0.255) const
]&]
[s3; Returns the X axis end.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYMax`(`)const:%- [@(0.0.255) double]_[* GetYMax]()_[@(0.0.255) const
]&]
[s3; Returns the Y axis end.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetY2Max`(`)const:%- [@(0.0.255) double]_[* GetY2Max]()_[@(0.0.255) con
st]&]
[s3; Returns the secondary Y axis end.&]
[s1;%- &]
[s6; &]
[s5;:ScatterDraw`:`:AddSeries`(double`*`,int`,double`,double`):%- [_^ScatterDraw^ Scatt
erDraw]_`&[* AddSeries]([@(0.0.255) double]_`*[*@3 yData], [@(0.0.255) int]_[*@3 numData], 
[@(0.0.255) double]_[*@3 x0]_`=_[@3 0], [@(0.0.255) double]_[*@3 deltaX]_`=_[@3 1])&]
[s3; Adds a new series stored in [%-*@3 yData ]C array with [%-*@3 numData] 
where the [%-*@3 yData`[0`] ]X value is [%-*@3 x0] and the horizontal 
distance between [%-*@3 yData] values is [%-*@3 deltaX].&]
[s3; [%-*@3 yData] has to be stored in a permanent location during 
ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSeries`(double`*`,double`*`,int`):%- [_^ScatterDraw^ ScatterDraw
]_`&[* AddSeries]([@(0.0.255) double]_`*[*@3 xData], [@(0.0.255) double]_`*[*@3 yData], 
[@(0.0.255) int]_[*@3 numData])&]
[s3; Adds a new series stored in [%-*@3 xData] and [%-*@3 yData] C arrays 
with [%-*@3 numData].&]
[s3; [%-*@3 xData] and [%-*@3 yData] has to be stored in a permanent 
location during ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSeries`(Upp`:`:Vector`<double`>`&`,Upp`:`:Vector`<double`>`&`):%- [_^ScatterDraw^ S
catterDraw]_`&[* AddSeries]([_^Vector^ Vector]<[@(0.0.255) double]>_`&[*@3 xData], 
[_^Vector^ Vector]<[@(0.0.255) double]>_`&[*@3 yData])&]
[s3; Adds a new series stored in [%-*@3 xData] and [%-*@3 yData] [%-_^Vector^ Vector][%- <][%-@(0.0.255) d
ouble][%- >].&]
[s3; [%-*@3 xData] and [%-*@3 yData] has to be stored in a permanent 
location during ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSeries`(Upp`:`:Array`<double`>`&`,Upp`:`:Array`<double`>`&`):%- [_^ScatterDraw^ S
catterDraw]_`&[* AddSeries]([_^Array^ Array]<[@(0.0.255) double]>_`&[*@3 xData], 
[_^Array^ Array]<[@(0.0.255) double]>_`&[*@3 yData])&]
[s3; Adds a new series stored in [%-*@3 xData] and [%-*@3 yData] [%-_^Vector^ Array][%- <][%-@(0.0.255) d
ouble][%- >].&]
[s3; [%-*@3 xData] and [%-*@3 yData] has to be stored in a permanent 
location during ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSeries`(Upp`:`:Vector`<Upp`:`:Pointf`>`&`):%- [_^ScatterDraw^ Sc
atterDraw]_`&[* AddSeries]([_^Vector^ Vector]<[_^Pointf^ Pointf]>_`&[*@3 points])&]
[s3; Adds a new series stored in [%-*@3 points] [%-_^Vector^ Vector][%- <][%-_^Pointf^ Pointf
][%- >].&]
[s3; [%-*@3 points] has to be stored in a permanent location during 
ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:AddSeries`(Upp`:`:Array`<Upp`:`:Pointf`>`&`):%- [_^ScatterDraw^ Sca
tterDraw]_`&[* AddSeries]([_^Array^ Array]<[_^Pointf^ Pointf]>_`&[*@3 points])&]
[s3; Adds a new series stored in [%-*@3 points] [%-_^Vector^ Array][%- <][%-_^Pointf^ Pointf][%- >
].&]
[s3; [%-*@3 points] has to be stored in a permanent location during 
ScatterDraw life to avoid memory problems.&]
[s1; &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:AddSeries`(Upp`:`:Vector`<Upp`:`:Vector`<double`>`>`&`):%- [_^Upp`:`:ScatterDraw^ S
catterDraw]_`&[* AddSeries]([_^Upp`:`:Vector^ Vector]<[_^Upp`:`:Vector^ Vector]_<[@(0.0.255) d
ouble]>_>_`&[*@3 data])&]
[s3; Adds a new series stored in [%-*@3 data] .&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Opacity`(double`):%- [_^ScatterDraw^ ScatterDraw]_`&[* Opacity]([@(0.0.255) d
ouble]_[*@3 opacity]_`=_[@3 1])&]
[s3; Sets the series [%-*@3 opacity] .from 1 (opaque) to 0 (transparent/invisible).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Legend`(const Upp`:`:String`):%- [_^ScatterDraw^ ScatterDraw]_`&[* Le
gend]([@(0.0.255) const]_[_^String^ String]_[*@3 legend])&]
[s3; Sets the series [%-*@3 legend].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Legend`(int`,const Upp`:`:String`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* Legend]([@(0.0.255) int]_[*@3 index], [@(0.0.255) const]_[_^String^ String]_[*@3 legend])
&]
[s3; Sets the [%-*@3 legend] for [%-*@3 index] series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetLegend`(int`):%- [@(0.0.255) const]_[_^String^ String][@(0.0.255) `&
]_[* GetLegend]([@(0.0.255) int]_[*@3 index])&]
[s3; Returns the legend for [%-*@3 index] series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Units`(const Upp`:`:String`,const Upp`:`:String`):%- [_^ScatterDraw^ S
catterDraw]_`&[* Units]([@(0.0.255) const]_[_^String^ String]_[*@3 unitsY], 
[@(0.0.255) const]_[_^String^ String]_[*@3 unitsX]_`=_`"`")&]
[s3; Sets the series units for Y axis ([%-*@3 unitsY]) and X axis ([%-*@3 unitsX]).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Units`(int`,const Upp`:`:String`,const Upp`:`:String`):%- [_^ScatterDraw^ S
catterDraw]_`&[* Units]([@(0.0.255) int]_[*@3 index], [@(0.0.255) const]_[_^String^ String]_
[*@3 unitsY], [@(0.0.255) const]_[_^String^ String]_[*@3 unitsX]_`=_`"`")&]
[s3; Sets the [%-*@3 index] series units for Y axis ([%-*@3 unitsY]) 
and X axis ([%-*@3 unitsX]).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetUnitsX`(int`):%- [@(0.0.255) const]_[_^String^ String]_[* GetUnitsX](
[@(0.0.255) int]_[*@3 index])&]
[s3; Returns the X axis units for [%-*@3 index] series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetUnitsY`(int`):%- [@(0.0.255) const]_[_^String^ String]_[* GetUnitsY](
[@(0.0.255) int]_[*@3 index])&]
[s3; Returns the Y axis units for [%-*@3 index] series.&]
[s1; &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:LegendLine`(bool`):%- [_^Upp`:`:ScatterDraw^ ScatterDraw]_`&
[* LegendLine]([@(0.0.255) bool]_[*@3 b]_`=_[@(0.0.255) true])&]
[s3; Draw line in series legend even if the series does not plot 
lines (NoPlot).&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:IsValid`(int`)const:%- [@(0.0.255) bool]_[* IsValid]([@(0.0.255) int]_[*@3 i
ndex])_[@(0.0.255) const]&]
[s3; Returns true if [%-*@3 index] is between 0 and GetCount()`-1..&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDrawXReticle`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetDrawXReticle]([@(0.0.255) bool]_[*@3 set]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 set] is true the small lines and texts beside every 
X grid line are shown.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDrawYReticle`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetDrawYReticle]([@(0.0.255) bool]_[*@3 set]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 set] is true the small lines and texts to the left of 
every Y grid line are shown.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDrawY2Reticle`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetDrawY2Reticle]([@(0.0.255) bool]_[*@3 set]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 set] is true the small lines and texts to the right 
of every Y grid line are shown.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetDrawXReticle`(`):%- [@(0.0.255) bool]_[* GetDrawXReticle]()&]
[s3; Returns true if the the small lines and texts beside every X 
grid line are shown.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetDrawYReticle`(`):%- [@(0.0.255) bool]_[* GetDrawYReticle]()&]
[s3; Returns true if the the small lines and texts to the left of 
every Y grid line are shown.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetDrawY2Reticle`(`):%- [@(0.0.255) bool]_[* GetDrawY2Reticle]()&]
[s3; Returns true if the the small lines and texts to the right of 
every Y grid line are shown.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:SetReticleFont`(const Upp`:`:Font`&`):%- [_^Upp`:`:ScatterDraw^ S
catterDraw]_`&[* SetReticleFont]([@(0.0.255) const]_[_^Upp`:`:Font^ Font]_`&[*@3 fnt])&]
[s3; Sets [%-*@3 fnt] as reticle font.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetReticleFont`(`):%- [_^Upp`:`:Font^ Font]_`&[* GetReticleFont]()&]
[s3; Gets reticle font.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:SetReticleColor`(const Upp`:`:Color`&`):%- [_^Upp`:`:ScatterDraw^ S
catterDraw]_`&[* SetReticleColor]([@(0.0.255) const]_[_^Upp`:`:Color^ Color]_`&[*@3 col])
&]
[s3; Sets [%-*@3 col] as reticle color.&]
[s1; &]
[s6; &]
[s5;:ScatterDraw`:`:GetReticleColor`(`):%- [_^Upp`:`:Color^ Color]_`&[* GetReticleColor](
)&]
[s3; Gets reticle color&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDataPrimaryY`(int`,bool`):%- [@(0.0.255) void]_[* SetDataPrimaryY](
[@(0.0.255) int]_[*@3 index], [@(0.0.255) bool]_[*@3 primary]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 primary] is true, [%-*@3 index] series is considered to 
be a primary series so it uses the left vertical axis. If false 
it uses the right vertical axis. In this case right vertical 
grid is activated.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDataPrimaryY`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetDataP
rimaryY]([@(0.0.255) bool]_[*@3 primary])&]
[s3; If [%-*@3 primary] is true, last added series is considered to 
be a primary series so it uses the left vertical axis. &]
[s3; If false it uses the right vertical axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDataSecondaryY`(int`,bool`):%- [@(0.0.255) void]_[* SetDataSeconda
ryY]([@(0.0.255) int]_[*@3 index], [@(0.0.255) bool]_[*@3 secondary])&]
[s3; Opposed to SetDataPrimaryY() if [%-*@3 secondary] is true, [%-*@3 index] 
series is considered to be a secondary series so it uses the 
right vertical axis. In this case right vertical grid is activated.&]
[s3; If false it uses the left vertical axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetDataSecondaryY`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetDat
aSecondaryY]([@(0.0.255) bool]_[*@3 secondary])&]
[s3; Opposed to SetDataPrimaryY() if [%-*@3 secondary] is true, last 
added series is considered to be a secondary series so it uses 
the right vertical axis. In this case right vertical grid is 
activated.&]
[s3; If false it uses the left vertical axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:IsDataPrimaryY`(int`):%- [@(0.0.255) bool]_[* IsDataPrimaryY]([@(0.0.255) i
nt]_[*@3 index])&]
[s3; Returns true if [%-*@3 index] series is primary..&]
[s1; &]
[s6; &]
[s5;:ScatterDraw`:`:SetSequentialX`(int`,bool`):%- [@(0.0.255) void]_[* SetSequentialX]([@(0.0.255) i
nt]_[*@3 index], [@(0.0.255) bool]_[*@3 sequential]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 sequential] is true, [%-*@3 index] series is considered 
to be sequential so all data points are ordered following the 
X axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetSequentialX`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetSequen
tialX]([@(0.0.255) bool]_[*@3 sequential]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 sequential] is true the last added series is considered 
to be sequential so all data points are ordered following the 
X axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetSequentialXAll`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* SetSeq
uentialXAll]([@(0.0.255) bool]_[*@3 sequential]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 sequential] is true all series are considered to be 
sequential so all data points are ordered following the X axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetSequentialX`(int`):%- [@(0.0.255) bool]_[* GetSequentialX]([@(0.0.255) i
nt]_[*@3 index])&]
[s3; Returns true if [%-*@3 index] data series is considered to be 
sequential so all data points are ordered following the X axis.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetSequentialX`(`):%- [@(0.0.255) bool]_[* GetSequentialX]()&]
[s3; Returns true if  the last added series is considered to be sequential 
so all data points are ordered following the X axis.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:Show`(int`,bool`):%- [@(0.0.255) void]_[* Show]([@(0.0.255) int]_[*@3 ind
ex], [@(0.0.255) bool]_[*@3 show]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 show] is true it sets the opacity of [%-*@3 index] data 
series to 1. If false, the opacity will be set to 0.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:IsVisible`(int`):%- [@(0.0.255) bool]_[* IsVisible]([@(0.0.255) int]_[*@3 i
ndex])&]
[s3; Returns true if [%-*@3 index] data series opacity is greater than 
0.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:ShowAll`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* ShowAll]([@(0.0.255) b
ool]_[*@3 show]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 show] is true it sets the opacity of all series to 1. 
If false, the opacity will be set to 0.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:RemoveSeries`(int`):%- [@(0.0.255) bool]_[* RemoveSeries]([@(0.0.255) i
nt]_[*@3 index])&]
[s3; Remove [%-*@3 index] data series from control. It does not delete 
the series data.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:RemoveAllSeries`(`):%- [_^ScatterDraw^ ScatterDraw]_`&[* RemoveAllSer
ies]()&]
[s3; Remove all data series from control. It does not delete the 
series data.&]
[s1;%- &]
[s6;%- &]
[s5;:Upp`:`:ScatterDraw`:`:SwapSeries`(int`,int`):%- [@(0.0.255) bool]_[* SwapSeries]([@(0.0.255) i
nt]_[*@3 i1], [@(0.0.255) int]_[*@3 i2])&]
[s3; Swaps the series [%-*@3 i1] with [%-*@3 i2].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetImage`(`):%- [_^Upp`:`:Image^ Image]_[* GetImage]()&]
[s3; Returns the scatter plot as an Image.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:Id`(int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* Id]([@(0.0.255) i
nt]_[*@3 id])&]
[s3; Sets the [%-*@3 id] of the last added data series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Id`(int`,int`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* Id]([@(0.0.255) i
nt]_[*@3 index], [@(0.0.255) int]_[*@3 id])&]
[s3; Sets the [%-*@3 id] if [%-*@3 index] data series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetId`(int`):%- [@(0.0.255) int]_[* GetId]([@(0.0.255) int]_[*@3 index])&]
[s3; Returns the id of [%-*@3 index] data series.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetDrawing`(`):%- [_^Drawing^ Drawing]_[* GetDrawing]()&]
[s3; Returns the control Drawing.&]
[s1;%- &]
[s6; &]
[s5;:ScatterDraw`:`:GetXByPoint`(double`):%- [@(0.0.255) double]_[* GetXByPoint]([@(0.0.255) d
ouble]_[*@3 x])&]
[s3; Returns the X axis value of pixel [%-*@3 x] in data set units.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYByPoint`(double`):%- [@(0.0.255) double]_[* GetYByPoint]([@(0.0.255) d
ouble]_[*@3 y])&]
[s3; Returns theY axis value of pixel [%-*@3 y] in data set units.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetY2ByPoint`(double`):%- [@(0.0.255) double]_[* GetY2ByPoint]([@(0.0.255) d
ouble]_[*@3 y])&]
[s3; Returns the secondary Y axis value of pixel [%-*@3 y] in data 
set units.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetXPointByValue`(double`):%- [@(0.0.255) double]_[* GetXPointByValue
]([@(0.0.255) double]_[*@3 x])&]
[s3; Returns the X axis pixel value of [%-*@3 x] in data set units.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetYPointByValue`(double`):%- [@(0.0.255) double]_[* GetYPointByValue
]([@(0.0.255) double]_[*@3 y])&]
[s3; Returns the Y axis pixel value of [%-*@3 y] in data set units.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SaveAsMetafile`(const char`*`)const:%- [@(0.0.255) void]_[* SaveAsMet
afile]([@(0.0.255) const]_[@(0.0.255) char`*]_[*@3 file])_[@(0.0.255) const]&]
[s0;%- [*@(28.0.200)1 Windows]&]
[s3; Saves the control as a windows metafile in [%-*@3 file].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMinZoom`(double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetMinZoom]([@(0.0.255) double]_[*@3 x], [@(0.0.255) double]_[*@3 y]_`=_`-[@3 1])&]
[s3; Sets [%-*@3 x] and [%-*@3 y] as the minimum visible range. If [%-*@3 y] 
is `-1, only [%-*@3 x] zoom is considered.&]
[s3; Equal to SetMinRange().&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMaxZoom`(double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetMaxZoom]([@(0.0.255) double]_[*@3 x], [@(0.0.255) double]_[*@3 y]_`=_`-[@3 1])&]
[s3; Sets [%-*@3 x] and [%-*@3 y] as the maximum visible range. If [%-*@3 y] 
is `-1, only [%-*@3 x] zoom is considered.&]
[s3; Equal to SetMaxRange().&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMinRange`(double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetMinRange]([@(0.0.255) double]_[*@3 x], [@(0.0.255) double]_[*@3 y]_`=_`-[@3 1])&]
[s3; Sets [%-*@3 x] and [%-*@3 y] as the minimum visible range. If [%-*@3 y] 
is `-1, only [%-*@3 x] zoom is considered.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetMaxRange`(double`,double`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&
]_[* SetMaxRange]([@(0.0.255) double]_[*@3 x], [@(0.0.255) double]_[*@3 y]_`=_`-[@3 1])&]
[s3; Sets [%-*@3 x] and [%-*@3 y] as the maximum visible range. If [%-*@3 y] 
is `-1, only [%-*@3 x] zoom is considered.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:SetFastViewX`(bool`):%- [_^ScatterDraw^ ScatterDraw][@(0.0.255) `&]_[* S
etFastViewX]([@(0.0.255) bool]_[*@3 set]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 set] is true, only one point per screen pixel will be 
drawn. The Y value of this point will be the average of all data 
points between two pixels.&]
[s3; In case of big datasets and zoom in with big detail, this option 
can accelerate strongly the control refresh.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetFastViewX`(`):%- [@(0.0.255) bool]_[* GetFastViewX]()&]
[s3; Returns true if FastViewX has been set.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetCount`(`):%- [@(0.0.255) int]_[* GetCount]()&]
[s3; Returns the number of series loaded.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:IsEmpty`(`):%- [@(0.0.255) bool]_[* IsEmpty]()&]
[s3; Returns true if there are no series.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:NoPlot`(`):%- [_^ScatterDraw^ ScatterDraw]_`&[* NoPlot]()&]
[s3; Set to avoid showing the series. However the mar can be shown.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Stacked`(bool`):%- [_^ScatterDraw^ ScatterDraw]_`&[* Stacked]([@(0.0.255) b
ool]_[*@3 stacked]_`=_[@(0.0.255) true])&]
[s3; If [%-*@3 stacked] is true it is considered that all series are 
stacked.&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:NoMark`(`):%- [_^ScatterDraw^ ScatterDraw]_`&[* NoMark]()&]
[s3; Set to avoid showing mark in series. However the series can 
be shown.&]
[s1;%- &]
[s6;%- &]
[s5;:ScatterDraw`:`:Stroke`(int`,double`,Upp`:`:Color`):%- [_^ScatterDraw^ ScatterDraw]_
`&[* Stroke]([@(0.0.255) int]_[*@3 index], [@(0.0.255) double]_[*@3 thickness], 
[_^Upp`:`:Color^ Color]_[*@3 color])&]
[s3; Sets [%-*@3 index] series [%-*@3 thickness] and [%-*@3 color].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:Stroke`(double`,Upp`:`:Color`):%- [_^ScatterDraw^ ScatterDraw]_`&[* S
troke]([@(0.0.255) double]_[*@3 thickness], [_^Upp`:`:Color^ Color]_[*@3 color]_`=_Null)&]
[s3; Sets the series line [%-*@3 thickness] and [%-*@3 color].&]
[s1; &]
[s6;%- &]
[s5;:ScatterDraw`:`:GetStroke`(int`,double`&`,Upp`:`:Color`&`):%- [@(0.0.255) void]_[* Ge
tStroke]([@(0.0.255) int]_[*@3 index], [@(0.0.255) double]_`&[*@3 thickness], 
[_^Upp`:`:Color^ Color]_`&[*@3 color])&]
[s3; Gets [%-*@3 index] series [%-*@3 thickness] and [%-*@3 color].&]
[s1; &]
[s1;%- ]]